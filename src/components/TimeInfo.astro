<style>
.time-info {
  position: relative;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.875rem;
  font-weight: 500;
  white-space: nowrap;
  color: rgb(var(--color-text-secondary));
  min-height: 1.5rem;
}

.dark .time-info {
  color: rgb(var(--color-text-secondary));
}

#loading-animation {
  position: absolute;
  left: 0;
  top: 0;
  width: 1.5rem;
  height: 1.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 10;
}

#loading-animation > div {
  animation: spin 1s linear infinite;
  border: 2px solid transparent;
  border-bottom-color: rgb(var(--color-accent));
  border-radius: 50%;
  width: 1rem;
  height: 1rem;
  box-sizing: border-box;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fade-in-up {
  animation: fadeInUp 0.4s ease-out forwards;
}
</style>

<div class="time-info">
  <div id="loading-animation">
    <div></div>
  </div>

  <span
    id="current-time"
    class="hidden text-xs font-semibold text-[rgb(var(--color-text-primary))] dark:text-[rgb(var(--color-text-primary))]"
  ></span>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const currentTimeSpan = document.getElementById('current-time');
  const loadingAnimationElement = document.getElementById('loading-animation');

  function updateTime() {
    const now = new Date();
    const dateOptions = { weekday: 'short', month: 'short', day: 'numeric' };
    const timeOptions = { hour: 'numeric', minute: '2-digit', hour12: true };

    const formattedDate = now.toLocaleDateString('en-US', dateOptions);
    const formattedTime = now.toLocaleTimeString('en-US', timeOptions);

    currentTimeSpan.textContent = `${formattedDate} Â· ${formattedTime}`;

    // Show time and hide loader on first load
    if (loadingAnimationElement.style.display !== 'none') {
      loadingAnimationElement.style.display = 'none';
      currentTimeSpan.classList.remove('hidden');
      currentTimeSpan.classList.add('fade-in-up');
    }
  }

  // Initial update after 500ms to simulate loading
  setTimeout(updateTime, 500);

  // Update every minute
  setInterval(updateTime, 60 * 1000);
});
</script>
