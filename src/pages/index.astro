---
import "../styles/global.css";
import Menu from "../components/Menu.astro";
import SearchHistory from "../components/SearchHistory.astro";
import DailyProgressBar from "../components/DailyProgressBar.astro";
import TimeInfo from "../components/TimeInfo.astro";
import DynamicGreeting from "../components/DynamicGreeting/index.astro";
import EngineManager from "../components/EngineManager.astro";
import GoalsManager from "../components/GoalsManager.astro";
import SearchManager from "../components/SearchManager.astro";
---

<!doctype html>
<html lang="en">
    <head>
        <script is:inline>
            // The configured mode is stored in local storage
            const theme = localStorage.getItem("themePreference");
            // Put dark class on html tag to enable dark mode
            document.querySelector("html").className = theme;
        </script>

        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Minimal Search</title>

        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link
            href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap"
            rel="stylesheet"
        />

        <!-- Schoolbell Font CDN -->
        <link
            href="https://fonts.googleapis.com/css2?family=Schoolbell&display=swap"
            rel="stylesheet"
        />
        <!-- Phosphor Icons CDN for filled icons -->
        <!-- Tailwind CSS CDN with custom config to match existing colors -->

        <style type="text/css">
            /* CSS Variables for theming */
            :root {
                --color-primary-bg: 240 240 240;
                --color-secondary-bg: 224 224 224;
                --color-border-color: 187 187 187;
                --color-text-primary: 26 26 26;
                --color-text-secondary: 68 68 68;
                --color-text-placeholder: 119 119 119;
                --color-accent: 136 136 136;
                --color-radio-selected-bg: 221 221 221;
                --color-radio-selected-dot: 26 26 26;
            }

            html.dark {
                --color-primary-bg: 26 26 26;
                --color-secondary-bg: 42 42 42;
                --color-border-color: 68 68 68;
                --color-text-primary: 240 240 240;
                --color-text-secondary: 204 204 204;
                --color-text-placeholder: 136 136 136;
                --color-accent: 255 255 255;
                --color-radio-selected-bg: 85 85 85;
                --color-radio-selected-dot: 255 255 255;
            }

            /* Global transition for all elements for smoother UI */
            * {
                transition-property: all;
                transition-timing-function: ease-out;
                transition-duration: 0.2s;
            }

            /* Body font */
            body {
                font-family: "Inter", sans-serif;
            }

            /* Specific styles not easily replaced by Tailwind without breaking design */
            /* Active line indicator - now a single element */
            #active-line {
                position: absolute;
                bottom: 0;
                height: 2px;
                border-radius: 1px;
                transition:
                    left 0.3s ease-out,
                    width 0.3s ease-out; /* Sliding animation */
                z-index: 10; /* Ensure it's on top */
                background-color: rgb(
                    var(--color-text-primary)
                ); /* Use theme variable for color */
            }

            /* Loading indicator animation */
            #loading-indicator {
                animation: slide-fade 1s infinite
                    cubic-bezier(0.65, 0.05, 0.36, 1);
            }

            /* Keyframes for slide-fade animation */
            @keyframes slide-fade {
                0% {
                    opacity: 0;
                    transform: translateX(-50px);
                }
                25% {
                    opacity: 1;
                    transform: translateX(0);
                }
                75% {
                    opacity: 1;
                    transform: translateX(50px);
                }
                100% {
                    opacity: 0;
                    transform: translateX(100px);
                }
            }

            /* Hide the actual radio button visually */
            .custom-radio {
                position: absolute;
                opacity: 0;
                width: 0;
                height: 0;
                pointer-events: none;
            }

            /* Webkit browsers (Chrome, Safari) scrollbar styles */
            .history-list::-webkit-scrollbar {
                width: 6px; /* width of the scrollbar */
            }

            .history-list::-webkit-scrollbar-track {
                background: transparent; /* color of the tracking area */
            }

            .history-list::-webkit-scrollbar-thumb {
                background-color: rgb(
                    var(--color-border-color)
                ); /* Light mode thumb color */
                border-radius: 10px; /* roundness of the scroll thumb */
                border: 1px solid rgb(var(--color-secondary-bg)); /* Light mode border color */
            }

            /* Dark mode scrollbar thumb */
            html.dark .history-list::-webkit-scrollbar-thumb {
                background-color: rgb(
                    var(--color-border-color)
                ); /* Dark mode thumb color */
                border: 1px solid rgb(var(--color-secondary-bg)); /* Dark mode border color */
            }

            /* Firefox scrollbar styles */
            .history-list {
                scrollbar-width: thin;
                scrollbar-color: rgb(var(--color-border-color)) transparent; /* Light mode thumb and track color */
            }

            /* Dark mode Firefox scrollbar */
            html.dark .history-list {
                scrollbar-color: rgb(var(--color-border-color)) transparent; /* Dark mode thumb and track color */
            }

            /* Goal Context Menu specific styles for visibility transition */
            #goal-context-menu {
                display: flex; /* Keep flex display always */
                visibility: hidden; /* Start hidden for transitions */
                opacity: 0;
                pointer-events: none; /* Prevent clicks when hidden */
                transition:
                    opacity 0.2s ease-out,
                    visibility 0.2s ease-out;
            }

            #goal-context-menu.show {
                visibility: visible;
                opacity: 1;
                pointer-events: auto;
            }

            

            #top-elements.with-engine #engine-selection {
                flex-shrink: 0;
                flex-grow: 0;
            }
        </style>
        <!-- Inline script to prevent theme flicker -->
    </head>
    <body
        class="bg-[rgb(var(--color-primary-bg))] text-[rgb(var(--color-text-primary))] flex items-center justify-center min-h-screen p-4 antialiased
             dark:bg-[rgb(var(--color-primary-bg))] dark:text-[rgb(var(--color-text-primary))]"
    >
        <!-- Blank screen overlay for transition -->
        <div
            id="blank-screen-overlay"
            class="fixed inset-0 opacity-0 pointer-events-none z-[9999] transition-opacity duration-50 flex items-center justify-center
             bg-[rgb(var(--color-primary-bg))] dark:bg-[rgb(var(--color-primary-bg))]"
        >
            <div
                id="loading-indicator"
                class="w-[50px] h-1 bg-[rgb(var(--color-accent))] rounded-sm opacity-0 dark:bg-[rgb(var(--color-accent))]"
            >
            </div>
        </div>

        <!-- <div
            id="goal-context-menu"
            class="context-menu absolute bg-[rgb(var(--color-secondary-bg))] border border-[rgb(var(--color-border-color))] rounded-sm shadow-lg z-50 flex-col min-w-[120px] py-1
             dark:bg-[rgb(var(--color-secondary-bg))] dark:border-[rgb(var(--color-border-color))]"
        >
            <div
                class="context-menu-item px-4 py-2 text-[rgb(var(--color-text-primary))] text-sm cursor-pointer whitespace-nowrap hover:bg-[rgb(var(--color-border-color))]
                    dark:text-[rgb(var(--color-text-primary))] dark:hover:bg-[rgb(var(--color-border-color))]"
                data-action="completed"
            >
                Completed
            </div>
            <div
                class="context-menu-item px-4 py-2 text-[rgb(var(--color-text-primary))] text-sm cursor-pointer whitespace-nowrap hover:bg-[rgb(var(--color-border-color))]
                    dark:text-[rgb(var(--color-text-primary))] dark:hover:bg-[rgb(var(--color-border-color))]"
                data-action="delete"
            >
                Delete
            </div>
        </div> -->

        <div
            class="container-wrapper w-full max-w-3xl flex flex-col gap-4 relative"
        >
            <!-- New Edit Goal Section - For single goal edit, appears from top -->
            <GoalsManager />
            <!-- Top elements: Time Info and dynamically moved Engine Selection -->
            <div
                id="top-elements"
                class="flex justify-between gap-4 items-start w-full"
            >
                <TimeInfo />

                <!-- The engine-selection element will be dynamically moved here or in main-content-bottom -->
            </div>

                    <SearchManager />


            <!-- Main content bottom: Engine Selection (if goals hidden), Goals, Daily Progress -->
            <div
                id="main-content-bottom"
                class="flex flex-col sm:flex-row gap-4 w-full justify-between items-center"
            >
                <EngineManager />

                <div
                    class="goals-container w-full flex-grow max-w-none pr-0 grid grid-cols-2 gap-4 items-start"
                    id="goals-container"
                >
                    <!-- Goals or "Click here to set up" message will be rendered here -->
                </div>
                <DailyProgressBar />
            </div>

            <SearchHistory />
        </div>

        <Menu />

        <DynamicGreeting />
        <GoalsManager />

        <script>
 
            import LayoutManager from "../utils/LayoutManager.ts";

            function initializeApp() {
                const blankScreenOverlay = document.getElementById(
                    "blank-screen-overlay",
                );
                const searchInput = document.getElementById("search-input");

                // Initialize all modules
                LayoutManager.init();

                // Fix for blank screen on browser back button
                window.addEventListener("pageshow", (event) => {
                    if (event.persisted) {
                        blankScreenOverlay.style.opacity = "0";
                        blankScreenOverlay.style.pointerEvents = "none";
                    }
                });

                // Hide loading overlay and focus search input
                blankScreenOverlay.style.opacity = "0";
                blankScreenOverlay.style.pointerEvents = "none";
                setTimeout(() => searchInput.focus(), 400);
            }

            document.addEventListener("DOMContentLoaded", initializeApp);
        </script>
    </body>
</html>
